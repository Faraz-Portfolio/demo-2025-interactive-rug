/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: demidrew (https://sketchfab.com/demidrew)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/carpet-66e06c1857814fd2a60e3ecfdba36ae0
Title: Carpet
*/

import { useGLTF } from "@react-three/drei";
import {
  cloneElement,
  useLayoutEffect,
  useMemo,
  type PropsWithChildren,
  type ReactElement,
  type ReactNode,
  type RefObject,
} from "react";
import { RugMaterial, type RugMaterialProps } from "./RugMaterial";
import type { Group, Vector3 } from "three";

interface CarpetProps {
  underPositionRef: RefObject<Vector3>;
}

export function Carpet({ underPositionRef }: CarpetProps) {
  const { nodes, materials } = useGLTF("/carpet.glb") as any;

  const base = useMemo(
    () => materials.defaultMat.clone(),
    [materials.defaultMat]
  );
  useLayoutEffect(() => () => base.dispose(), [base]);

  return (
    <group dispose={null}>
      <mesh
        receiveShadow
        geometry={nodes.LC_defaultMat_0.geometry}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <RugMaterial underPositionRef={underPositionRef} baseMaterial={base} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/carpet.glb");
